plugins {
	id 'java'
	id 'org.springframework.boot' version '2.6.8'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
//	implementation 'org.modelmapper:modelmapper:2.4.2'
//	implementation group: 'org.javassist', name: 'javassist', version: '3.15.0-GA'

	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-devtools'

	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'

	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.3.0'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	testImplementation 'org.springframework.security:spring-security-test'


//	//Query DSL setting
//	implementation 'com.querydsl:querydsl-jpa'
//	implementation 'com.querydsl:querydsl-apt'
//
//	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
//	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
//	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
//
//	//Query DSL setting

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'mysql:mysql-connector-java'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}
////Query DSL setting
//
//def querydslSrcDir = 'src/main/generated'
//sourceSets {
//	main {
//		java {
//			srcDirs += [ querydslSrcDir ]
//		}
//	}
//}
//
//compileJava {
//	options.compilerArgs << '-Aquerydsl.generatedAnnotationClass=javax.annotation.Generated'
//}
//
//tasks.withType(JavaCompile) {
//	options.generatedSourceOutputDirectory = file(querydslSrcDir)
//}
//
//clean {
//	delete file(querydslSrcDir)
//}
////Query DSL setting

tasks.named('test') {
	useJUnitPlatform()
}